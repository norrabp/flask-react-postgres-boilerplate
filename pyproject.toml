[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "flask-postgres-celery-boilerplate"
version = "0.1.0"
description = "Full-stack web application boilerplate with Flask, React, PostgreSQL, Redis, and Celery"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "backend"}]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.11"
Flask = "^3.0.0"
Flask-SQLAlchemy = "^3.1.1"
psycopg2-binary = "^2.9.9"
celery = {extras = ["redis"], version = "^5.3.6"}
Flask-Migrate = "^4.0.5"
Flask-CORS = "^4.0.0"
Flask-JWT-Extended = "^4.5.3"
redis = "^5.0.1"
email-validator = "^2.1.0"
gunicorn = "^21.2.0"
python-dotenv = "^1.0.0"
Werkzeug = "^3.0.1"
SQLAlchemy = "^2.0.23"
alembic = "^1.12.1"
click = "^8.1.7"
itsdangerous = "^2.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
black = "^23.11.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
pytest-flask = "^1.3.0"
pytest-env = "^1.1.1"
isort = "^5.12.0"
autoflake = "^2.2.1"
flake8-pyproject = "^1.2.3"

[tool.poetry.scripts]
flask = "flask.cli:main"
celery = "celery.__main__:main"

[tool.pytest.ini_options]
testpaths = ["backend/tests"]
python_files = ["test_*.py"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]
env = [
    "FLASK_ENV=testing",
    "FLASK_APP=backend.app:create_app",
    "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db",
    "REDIS_URL=redis://localhost:6379/1"
]

[tool.flake8]
max-line-length = 120
extend-ignore = "E203"

[tool.black]
line-length = 120
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
(
  /(
      \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.venv
    | __pycache__
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
known_first_party = ["backend"]
known_third_party = ["flask", "sqlalchemy", "celery", "redis", "pytest"]
