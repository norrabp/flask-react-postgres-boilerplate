modules = ["python-3.11", "nodejs-20"]

[nix]
channel = "stable-24_05"

[deployment]
deploymentTarget = "autoscale"
run = ["python", "main.py"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Backend Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Frontend Dev Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Celery Worker"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Redis Server"

[[workflows.workflow]]
name = "Backend Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "PYTHONPATH=$PYTHONPATH:. python run.py"
waitForPort = 8000

[[workflows.workflow]]
name = "Frontend Dev Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && npx vite"
waitForPort = 5000

[[workflows.workflow]]
name = "Celery Worker"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && PYTHONPATH=$PYTHONPATH:. celery -A celery_worker.celery worker --loglevel=info"

[[workflows.workflow]]
name = "Redis Server"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "redis-server --protected-mode no"

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 6379
externalPort = 3000

[[ports]]
localPort = 8000
externalPort = 80
